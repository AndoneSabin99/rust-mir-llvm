digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let mut _1: std::string::String;<br align="left"/>let _2: &amp;std::string::String;<br align="left"/>let _3: &amp;std::string::String;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::fmt::Arguments;<br align="left"/>let mut _6: [std::fmt::ArgumentV1; 2];<br align="left"/>let mut _7: (&amp;&amp;std::string::String, &amp;&amp;std::string::String);<br align="left"/>let mut _8: &amp;&amp;std::string::String;<br align="left"/>let mut _9: &amp;&amp;std::string::String;<br align="left"/>let _10: &amp;&amp;std::string::String;<br align="left"/>let _11: &amp;&amp;std::string::String;<br align="left"/>let mut _12: std::fmt::ArgumentV1;<br align="left"/>let mut _13: &amp;&amp;std::string::String;<br align="left"/>let mut _14: for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _15: std::fmt::ArgumentV1;<br align="left"/>let mut _16: &amp;&amp;std::string::String;<br align="left"/>let mut _17: for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _18: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let mut _19: &amp;[&amp;str];<br align="left"/>let mut _20: &amp;[&amp;str; 3];<br align="left"/>let _21: &amp;[&amp;str; 3];<br align="left"/>let mut _22: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _23: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let _24: &amp;mut std::string::String;<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::fmt::Arguments;<br align="left"/>let mut _27: [std::fmt::ArgumentV1; 1];<br align="left"/>let mut _28: (&amp;&amp;mut std::string::String,);<br align="left"/>let mut _29: &amp;&amp;mut std::string::String;<br align="left"/>let _30: &amp;&amp;mut std::string::String;<br align="left"/>let mut _31: std::fmt::ArgumentV1;<br align="left"/>let mut _32: &amp;&amp;mut std::string::String;<br align="left"/>let mut _33: for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;mut std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _34: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _35: &amp;[&amp;str];<br align="left"/>let mut _36: &amp;[&amp;str; 2];<br align="left"/>let _37: &amp;[&amp;str; 2];<br align="left"/>let mut _38: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _39: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _40: &amp;[&amp;str; 2];<br align="left"/>let mut _41: &amp;[&amp;str; 3];<br align="left"/>debug s =&gt; _1;<br align="left"/>debug r1 =&gt; _2;<br align="left"/>debug r2 =&gt; _3;<br align="left"/>debug arg0 =&gt; _10;<br align="left"/>debug arg1 =&gt; _11;<br align="left"/>debug args =&gt; _18;<br align="left"/>debug r3 =&gt; _24;<br align="left"/>debug arg0 =&gt; _30;<br align="left"/>debug args =&gt; _34;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left">_1 = &lt;String as From&lt;&amp;str&gt;&gt;::from(const &quot;hello&quot;)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_2 = &amp;_1<br/>_3 = &amp;_1<br/>_8 = &amp;_2<br/>_9 = &amp;_3<br/>(_7.0: &amp;&amp;std::string::String) = move _8<br/>(_7.1: &amp;&amp;std::string::String) = move _9<br/>_10 = (_7.0: &amp;&amp;std::string::String)<br/>_11 = (_7.1: &amp;&amp;std::string::String)<br/>_13 = _10<br/>_14 = &lt;&amp;String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_12 = ArgumentV1::new::&lt;&amp;String&gt;(move _13, move _14)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_16 = _11<br/>_17 = &lt;&amp;String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_15 = ArgumentV1::new::&lt;&amp;String&gt;(move _16, move _17)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = [move _12, move _15]<br/>_18 = &amp;_6<br/>_41 = const main::promoted[1]<br/>_21 = _41<br/>_20 = _21<br/>_19 = move _20 as &amp;[&amp;str] (Pointer(Unsize))<br/>_23 = _18<br/>_22 = move _23 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_5 = Arguments::new_v1(move _19, move _22)</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">_4 = _print(move _5)</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_24 = &amp;mut _1<br/>_29 = &amp;_24<br/>(_28.0: &amp;&amp;mut std::string::String) = move _29<br/>_30 = (_28.0: &amp;&amp;mut std::string::String)<br/>_32 = _30<br/>_33 = &lt;&amp;mut String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;mut std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_31 = ArgumentV1::new::&lt;&amp;mut String&gt;(move _32, move _33)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_27 = [move _31]<br/>_34 = &amp;_27<br/>_40 = const main::promoted[0]<br/>_37 = _40<br/>_36 = _37<br/>_35 = move _36 as &amp;[&amp;str] (Pointer(Unsize))<br/>_39 = _34<br/>_38 = move _39 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_26 = Arguments::new_v1(move _35, move _38)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_25 = _print(move _26)</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb11__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3 -> bb1__0_3 [label="return"];
    bb1__0_3 -> bb2__0_3 [label="return"];
    bb1__0_3 -> bb10__0_3 [label="unwind"];
    bb2__0_3 -> bb3__0_3 [label="return"];
    bb2__0_3 -> bb10__0_3 [label="unwind"];
    bb3__0_3 -> bb4__0_3 [label="return"];
    bb3__0_3 -> bb10__0_3 [label="unwind"];
    bb4__0_3 -> bb5__0_3 [label="return"];
    bb4__0_3 -> bb10__0_3 [label="unwind"];
    bb5__0_3 -> bb6__0_3 [label="return"];
    bb5__0_3 -> bb10__0_3 [label="unwind"];
    bb6__0_3 -> bb7__0_3 [label="return"];
    bb6__0_3 -> bb10__0_3 [label="unwind"];
    bb7__0_3 -> bb8__0_3 [label="return"];
    bb7__0_3 -> bb10__0_3 [label="unwind"];
    bb8__0_3 -> bb9__0_3 [label="return"];
    bb10__0_3 -> bb11__0_3 [label="return"];
}
