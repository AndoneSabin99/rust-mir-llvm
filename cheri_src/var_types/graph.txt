digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: i32;<br align="left"/>let _2: i64;<br align="left"/>let _3: i32;<br align="left"/>let _4: f32;<br align="left"/>let _5: f64;<br align="left"/>let _6: f64;<br align="left"/>let _7: bool;<br align="left"/>let _8: bool;<br align="left"/>let _9: char;<br align="left"/>let _10: char;<br align="left"/>let _11: (i32, f64, char);<br align="left"/>let _12: i32;<br align="left"/>let _13: f64;<br align="left"/>let _14: char;<br align="left"/>let _15: i32;<br align="left"/>let _16: i32;<br align="left"/>let _17: char;<br align="left"/>let _18: [i32; 5];<br align="left"/>let _19: i32;<br align="left"/>let _20: usize;<br align="left"/>let _21: i32;<br align="left"/>let _22: usize;<br align="left"/>debug x =&gt; _1;<br align="left"/>debug y =&gt; _2;<br align="left"/>debug xy =&gt; _3;<br align="left"/>debug z =&gt; _4;<br align="left"/>debug u =&gt; _5;<br align="left"/>debug zu =&gt; _6;<br align="left"/>debug t =&gt; _7;<br align="left"/>debug f =&gt; _8;<br align="left"/>debug c =&gt; _9;<br align="left"/>debug z =&gt; _10;<br align="left"/>debug tuple =&gt; _11;<br align="left"/>debug el1 =&gt; _12;<br align="left"/>debug _el2 =&gt; _13;<br align="left"/>debug _el3 =&gt; _14;<br align="left"/>debug el01 =&gt; _15;<br align="left"/>debug first =&gt; _16;<br align="left"/>debug _last =&gt; _17;<br align="left"/>debug a =&gt; _18;<br align="left"/>debug a1 =&gt; _19;<br align="left"/>debug a2 =&gt; _21;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1 = const 10_i32<br/>_2 = const 20_i64<br/>_3 = const 30_i32<br/>_4 = const 1.20000005f32<br/>_5 = const 3.4500000000000002f64<br/>_6 = const 4.650000047683716f64<br/>_7 = const true<br/>_8 = const false<br/>_9 = const 'z'<br/>_10 = const 'â„¤'<br/>(_11.0: i32) = const 1_i32<br/>(_11.1: f64) = const 2.5f64<br/>(_11.2: char) = const 'w'<br/>_12 = const 1_i32<br/>_13 = const 2.5f64<br/>_14 = const 'w'<br/>_15 = const 1_i32<br/>_16 = const 1_i32<br/>_17 = const 'w'<br/>_18 = [const 1_i32, const 2_i32, const 3_i32, const 4_i32, const 5_i32]<br/>_20 = const 0_usize<br/>_19 = _18[_20]<br/>_22 = const 1_usize<br/>_21 = _18[_22]<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
