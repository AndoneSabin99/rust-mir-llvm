digraph __crate__ {
subgraph cluster_Mir_0_5 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn change(_1: &amp;mut std::string::String) -&gt; ()<br align="left"/>let _2: ();<br align="left"/>let mut _3: &amp;mut std::string::String;<br align="left"/>let mut _4: &amp;str;<br align="left"/>let _5: &amp;str;<br align="left"/>debug some_string =&gt; _1;<br align="left"/>>;
    bb0__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = &amp;mut (*_1)<br/>_5 = const &quot;, world&quot;<br/>_4 = _5<br/></td></tr><tr><td align="left">_2 = String::push_str(move _3, move _4)</td></tr></table>>];
    bb1__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_5 -> bb1__0_5 [label="return"];
}
subgraph cluster_Mir_0_4 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_length(_1: &amp;std::string::String) -&gt; usize<br align="left"/>let mut _2: &amp;std::string::String;<br align="left"/>debug s =&gt; _1;<br align="left"/>>;
    bb0__0_4 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_2 = _1<br/></td></tr><tr><td align="left">_0 = String::len(move _2)</td></tr></table>>];
    bb1__0_4 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4 -> bb1__0_4 [label="return"];
}
subgraph cluster_Mir_0_6 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn no_dangle() -&gt; std::string::String<br align="left"/>debug s =&gt; _0;<br align="left"/>>;
    bb0__0_6 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left">_0 = &lt;String as From&lt;&amp;str&gt;&gt;::from(const &quot;hello&quot;)</td></tr></table>>];
    bb1__0_6 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_6 -> bb1__0_6 [label="return"];
}
subgraph cluster_Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: std::string::String;<br align="left"/>let _2: usize;<br align="left"/>let mut _3: &amp;std::string::String;<br align="left"/>let _4: &amp;std::string::String;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::fmt::Arguments;<br align="left"/>let mut _7: [std::fmt::ArgumentV1; 2];<br align="left"/>let mut _8: (&amp;std::string::String, &amp;usize);<br align="left"/>let mut _9: &amp;std::string::String;<br align="left"/>let mut _10: &amp;usize;<br align="left"/>let _11: &amp;std::string::String;<br align="left"/>let _12: &amp;usize;<br align="left"/>let mut _13: std::fmt::ArgumentV1;<br align="left"/>let mut _14: &amp;std::string::String;<br align="left"/>let mut _15: for&lt;'r, 's, 't0&gt; fn(&amp;'r std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _16: std::fmt::ArgumentV1;<br align="left"/>let mut _17: &amp;usize;<br align="left"/>let mut _18: for&lt;'r, 's, 't0&gt; fn(&amp;'r usize, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _19: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let mut _20: &amp;[&amp;str];<br align="left"/>let mut _21: &amp;[&amp;str; 3];<br align="left"/>let _22: &amp;[&amp;str; 3];<br align="left"/>let mut _23: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _24: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let mut _25: std::string::String;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;mut std::string::String;<br align="left"/>let mut _28: &amp;mut std::string::String;<br align="left"/>let _29: &amp;mut std::string::String;<br align="left"/>let _30: &amp;str;<br align="left"/>let _31: ();<br align="left"/>let mut _32: std::fmt::Arguments;<br align="left"/>let mut _33: [std::fmt::ArgumentV1; 2];<br align="left"/>let mut _34: (&amp;&amp;mut std::string::String, &amp;&amp;str);<br align="left"/>let mut _35: &amp;&amp;mut std::string::String;<br align="left"/>let mut _36: &amp;&amp;str;<br align="left"/>let _37: &amp;&amp;mut std::string::String;<br align="left"/>let _38: &amp;&amp;str;<br align="left"/>let mut _39: std::fmt::ArgumentV1;<br align="left"/>let mut _40: &amp;&amp;mut std::string::String;<br align="left"/>let mut _41: for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;mut std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _42: std::fmt::ArgumentV1;<br align="left"/>let mut _43: &amp;&amp;str;<br align="left"/>let mut _44: for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;str, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _45: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let mut _46: &amp;[&amp;str];<br align="left"/>let mut _47: &amp;[&amp;str; 3];<br align="left"/>let _48: &amp;[&amp;str; 3];<br align="left"/>let mut _49: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _50: &amp;[std::fmt::ArgumentV1; 2];<br align="left"/>let _51: std::string::String;<br align="left"/>let _52: ();<br align="left"/>let mut _53: std::fmt::Arguments;<br align="left"/>let mut _54: [std::fmt::ArgumentV1; 1];<br align="left"/>let mut _55: (&amp;std::string::String,);<br align="left"/>let mut _56: &amp;std::string::String;<br align="left"/>let _57: &amp;std::string::String;<br align="left"/>let mut _58: std::fmt::ArgumentV1;<br align="left"/>let mut _59: &amp;std::string::String;<br align="left"/>let mut _60: for&lt;'r, 's, 't0&gt; fn(&amp;'r std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _61: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _62: &amp;[&amp;str];<br align="left"/>let mut _63: &amp;[&amp;str; 2];<br align="left"/>let _64: &amp;[&amp;str; 2];<br align="left"/>let mut _65: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _66: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _67: &amp;[&amp;str; 2];<br align="left"/>let mut _68: &amp;[&amp;str; 3];<br align="left"/>let mut _69: &amp;[&amp;str; 3];<br align="left"/>debug s1 =&gt; _1;<br align="left"/>debug len =&gt; _2;<br align="left"/>debug arg0 =&gt; _11;<br align="left"/>debug arg1 =&gt; _12;<br align="left"/>debug args =&gt; _19;<br align="left"/>debug s =&gt; _25;<br align="left"/>debug r1 =&gt; _29;<br align="left"/>debug r2 =&gt; _30;<br align="left"/>debug arg0 =&gt; _37;<br align="left"/>debug arg1 =&gt; _38;<br align="left"/>debug args =&gt; _45;<br align="left"/>debug string =&gt; _51;<br align="left"/>debug arg0 =&gt; _57;<br align="left"/>debug args =&gt; _61;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left">_1 = &lt;String as From&lt;&amp;str&gt;&gt;::from(const &quot;hello&quot;)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;_1<br/>_3 = _4<br/></td></tr><tr><td align="left">_2 = calculate_length(move _3)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_9 = &amp;_1<br/>_10 = &amp;_2<br/>(_8.0: &amp;std::string::String) = move _9<br/>(_8.1: &amp;usize) = move _10<br/>_11 = (_8.0: &amp;std::string::String)<br/>_12 = (_8.1: &amp;usize)<br/>_14 = _11<br/>_15 = &lt;String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_13 = ArgumentV1::new::&lt;String&gt;(move _14, move _15)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_17 = _12<br/>_18 = &lt;usize as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r usize, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_16 = ArgumentV1::new::&lt;usize&gt;(move _17, move _18)</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_7 = [move _13, move _16]<br/>_19 = &amp;_7<br/>_69 = const main::promoted[2]<br/>_22 = _69<br/>_21 = _22<br/>_20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))<br/>_24 = _19<br/>_23 = move _24 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_6 = Arguments::new_v1(move _20, move _23)</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">_5 = _print(move _6)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">_25 = &lt;String as From&lt;&amp;str&gt;&gt;::from(const &quot;hello&quot;)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_28 = &amp;mut _25<br/>_27 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_26 = change(move _27)</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_29 = &amp;mut _25<br/>_30 = const &quot;asd&quot;<br/>_35 = &amp;_29<br/>_36 = &amp;_30<br/>(_34.0: &amp;&amp;mut std::string::String) = move _35<br/>(_34.1: &amp;&amp;str) = move _36<br/>_37 = (_34.0: &amp;&amp;mut std::string::String)<br/>_38 = (_34.1: &amp;&amp;str)<br/>_40 = _37<br/>_41 = &lt;&amp;mut String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;mut std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_39 = ArgumentV1::new::&lt;&amp;mut String&gt;(move _40, move _41)</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_43 = _38<br/>_44 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r &amp;str, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_42 = ArgumentV1::new::&lt;&amp;str&gt;(move _43, move _44)</td></tr></table>>];
    bb10__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_33 = [move _39, move _42]<br/>_45 = &amp;_33<br/>_68 = const main::promoted[1]<br/>_48 = _68<br/>_47 = _48<br/>_46 = move _47 as &amp;[&amp;str] (Pointer(Unsize))<br/>_50 = _45<br/>_49 = move _50 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_32 = Arguments::new_v1(move _46, move _49)</td></tr></table>>];
    bb11__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">_31 = _print(move _32)</td></tr></table>>];
    bb12__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">_51 = no_dangle()</td></tr></table>>];
    bb13__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_56 = &amp;_51<br/>(_55.0: &amp;std::string::String) = move _56<br/>_57 = (_55.0: &amp;std::string::String)<br/>_59 = _57<br/>_60 = &lt;String as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r std::string::String, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_58 = ArgumentV1::new::&lt;String&gt;(move _59, move _60)</td></tr></table>>];
    bb14__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_54 = [move _58]<br/>_61 = &amp;_54<br/>_67 = const main::promoted[0]<br/>_64 = _67<br/>_63 = _64<br/>_62 = move _63 as &amp;[&amp;str] (Pointer(Unsize))<br/>_66 = _61<br/>_65 = move _66 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_53 = Arguments::new_v1(move _62, move _65)</td></tr></table>>];
    bb15__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">_52 = _print(move _53)</td></tr></table>>];
    bb16__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb17__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb18__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb19__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb21__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb22__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb23__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3 -> bb1__0_3 [label="return"];
    bb1__0_3 -> bb2__0_3 [label="return"];
    bb1__0_3 -> bb22__0_3 [label="unwind"];
    bb2__0_3 -> bb3__0_3 [label="return"];
    bb2__0_3 -> bb22__0_3 [label="unwind"];
    bb3__0_3 -> bb4__0_3 [label="return"];
    bb3__0_3 -> bb22__0_3 [label="unwind"];
    bb4__0_3 -> bb5__0_3 [label="return"];
    bb4__0_3 -> bb22__0_3 [label="unwind"];
    bb5__0_3 -> bb6__0_3 [label="return"];
    bb5__0_3 -> bb22__0_3 [label="unwind"];
    bb6__0_3 -> bb7__0_3 [label="return"];
    bb6__0_3 -> bb22__0_3 [label="unwind"];
    bb7__0_3 -> bb8__0_3 [label="return"];
    bb7__0_3 -> bb21__0_3 [label="unwind"];
    bb8__0_3 -> bb9__0_3 [label="return"];
    bb8__0_3 -> bb21__0_3 [label="unwind"];
    bb9__0_3 -> bb10__0_3 [label="return"];
    bb9__0_3 -> bb21__0_3 [label="unwind"];
    bb10__0_3 -> bb11__0_3 [label="return"];
    bb10__0_3 -> bb21__0_3 [label="unwind"];
    bb11__0_3 -> bb12__0_3 [label="return"];
    bb11__0_3 -> bb21__0_3 [label="unwind"];
    bb12__0_3 -> bb13__0_3 [label="return"];
    bb12__0_3 -> bb21__0_3 [label="unwind"];
    bb13__0_3 -> bb14__0_3 [label="return"];
    bb13__0_3 -> bb20__0_3 [label="unwind"];
    bb14__0_3 -> bb15__0_3 [label="return"];
    bb14__0_3 -> bb20__0_3 [label="unwind"];
    bb15__0_3 -> bb16__0_3 [label="return"];
    bb15__0_3 -> bb20__0_3 [label="unwind"];
    bb16__0_3 -> bb17__0_3 [label="return"];
    bb16__0_3 -> bb21__0_3 [label="unwind"];
    bb17__0_3 -> bb18__0_3 [label="return"];
    bb17__0_3 -> bb22__0_3 [label="unwind"];
    bb18__0_3 -> bb19__0_3 [label="return"];
    bb20__0_3 -> bb21__0_3 [label="return"];
    bb21__0_3 -> bb22__0_3 [label="return"];
    bb22__0_3 -> bb23__0_3 [label="return"];
}
}
