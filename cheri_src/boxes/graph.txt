digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: std::boxed::Box&lt;i32&gt;;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::fmt::Arguments;<br align="left"/>let mut _4: [std::fmt::ArgumentV1; 1];<br align="left"/>let mut _5: (&amp;i32,);<br align="left"/>let mut _6: &amp;i32;<br align="left"/>let _7: &amp;i32;<br align="left"/>let mut _8: std::fmt::ArgumentV1;<br align="left"/>let mut _9: &amp;i32;<br align="left"/>let mut _10: for&lt;'r, 's, 't0&gt; fn(&amp;'r i32, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _11: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _12: &amp;[&amp;str];<br align="left"/>let mut _13: &amp;[&amp;str; 2];<br align="left"/>let _14: &amp;[&amp;str; 2];<br align="left"/>let mut _15: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _16: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::fmt::Arguments;<br align="left"/>let mut _19: [std::fmt::ArgumentV1; 1];<br align="left"/>let mut _20: (&amp;std::boxed::Box&lt;i32&gt;,);<br align="left"/>let mut _21: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let _22: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let mut _23: std::fmt::ArgumentV1;<br align="left"/>let mut _24: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let mut _25: for&lt;'r, 's, 't0&gt; fn(&amp;'r std::boxed::Box&lt;i32&gt;, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _26: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _27: &amp;[&amp;str];<br align="left"/>let mut _28: &amp;[&amp;str; 2];<br align="left"/>let _29: &amp;[&amp;str; 2];<br align="left"/>let mut _30: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _31: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::fmt::Arguments;<br align="left"/>let mut _34: [std::fmt::ArgumentV1; 1];<br align="left"/>let mut _35: (&amp;std::boxed::Box&lt;i32&gt;,);<br align="left"/>let mut _36: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let _37: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let mut _38: std::fmt::ArgumentV1;<br align="left"/>let mut _39: &amp;std::boxed::Box&lt;i32&gt;;<br align="left"/>let mut _40: for&lt;'r, 's, 't0&gt; fn(&amp;'r std::boxed::Box&lt;i32&gt;, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let _41: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _42: &amp;[&amp;str];<br align="left"/>let mut _43: &amp;[&amp;str; 2];<br align="left"/>let _44: &amp;[&amp;str; 2];<br align="left"/>let mut _45: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _46: &amp;[std::fmt::ArgumentV1; 1];<br align="left"/>let mut _47: &amp;[&amp;str; 2];<br align="left"/>let mut _48: &amp;[&amp;str; 2];<br align="left"/>let mut _49: &amp;[&amp;str; 2];<br align="left"/>debug b =&gt; _1;<br align="left"/>debug arg0 =&gt; _7;<br align="left"/>debug args =&gt; _11;<br align="left"/>debug arg0 =&gt; _22;<br align="left"/>debug args =&gt; _26;<br align="left"/>debug arg0 =&gt; _37;<br align="left"/>debug args =&gt; _41;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left">_1 = Box::&lt;i32&gt;::new(const 5_i32)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = &amp;(*_1)<br/>(_5.0: &amp;i32) = move _6<br/>_7 = (_5.0: &amp;i32)<br/>_9 = _7<br/>_10 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r i32, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_8 = ArgumentV1::new::&lt;i32&gt;(move _9, move _10)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_4 = [move _8]<br/>_11 = &amp;_4<br/>_49 = const main::promoted[2]<br/>_14 = _49<br/>_13 = _14<br/>_12 = move _13 as &amp;[&amp;str] (Pointer(Unsize))<br/>_16 = _11<br/>_15 = move _16 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_3 = Arguments::new_v1(move _12, move _15)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">_2 = _print(move _3)</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_21 = &amp;_1<br/>(_20.0: &amp;std::boxed::Box&lt;i32&gt;) = move _21<br/>_22 = (_20.0: &amp;std::boxed::Box&lt;i32&gt;)<br/>_24 = _22<br/>_25 = &lt;Box&lt;i32&gt; as std::fmt::Display&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r std::boxed::Box&lt;i32&gt;, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_23 = ArgumentV1::new::&lt;Box&lt;i32&gt;&gt;(move _24, move _25)</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_19 = [move _23]<br/>_26 = &amp;_19<br/>_48 = const main::promoted[1]<br/>_29 = _48<br/>_28 = _29<br/>_27 = move _28 as &amp;[&amp;str] (Pointer(Unsize))<br/>_31 = _26<br/>_30 = move _31 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_18 = Arguments::new_v1(move _27, move _30)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">_17 = _print(move _18)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_36 = &amp;_1<br/>(_35.0: &amp;std::boxed::Box&lt;i32&gt;) = move _36<br/>_37 = (_35.0: &amp;std::boxed::Box&lt;i32&gt;)<br/>_39 = _37<br/>_40 = &lt;Box&lt;i32&gt; as Pointer&gt;::fmt as for&lt;'r, 's, 't0&gt; fn(&amp;'r std::boxed::Box&lt;i32&gt;, &amp;'s mut std::fmt::Formatter&lt;'t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))<br/></td></tr><tr><td align="left">_38 = ArgumentV1::new::&lt;Box&lt;i32&gt;&gt;(move _39, move _40)</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_34 = [move _38]<br/>_41 = &amp;_34<br/>_47 = const main::promoted[0]<br/>_44 = _47<br/>_43 = _44<br/>_42 = move _43 as &amp;[&amp;str] (Pointer(Unsize))<br/>_46 = _41<br/>_45 = move _46 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_33 = Arguments::new_v1(move _42, move _45)</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">_32 = _print(move _33)</td></tr></table>>];
    bb10__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb11__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb13__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3 -> bb1__0_3 [label="return"];
    bb1__0_3 -> bb2__0_3 [label="return"];
    bb1__0_3 -> bb12__0_3 [label="unwind"];
    bb2__0_3 -> bb3__0_3 [label="return"];
    bb2__0_3 -> bb12__0_3 [label="unwind"];
    bb3__0_3 -> bb4__0_3 [label="return"];
    bb3__0_3 -> bb12__0_3 [label="unwind"];
    bb4__0_3 -> bb5__0_3 [label="return"];
    bb4__0_3 -> bb12__0_3 [label="unwind"];
    bb5__0_3 -> bb6__0_3 [label="return"];
    bb5__0_3 -> bb12__0_3 [label="unwind"];
    bb6__0_3 -> bb7__0_3 [label="return"];
    bb6__0_3 -> bb12__0_3 [label="unwind"];
    bb7__0_3 -> bb8__0_3 [label="return"];
    bb7__0_3 -> bb12__0_3 [label="unwind"];
    bb8__0_3 -> bb9__0_3 [label="return"];
    bb8__0_3 -> bb12__0_3 [label="unwind"];
    bb9__0_3 -> bb10__0_3 [label="return"];
    bb9__0_3 -> bb12__0_3 [label="unwind"];
    bb10__0_3 -> bb11__0_3 [label="return"];
    bb12__0_3 -> bb13__0_3 [label="return"];
}
