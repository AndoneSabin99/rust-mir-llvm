digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: bool;<br align="left"/>let _2: bool;<br align="left"/>let _3: &amp;[std::fmt::ArgumentV1; 0];<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::fmt::Arguments;<br align="left"/>let _6: &amp;[std::fmt::ArgumentV1; 0];<br align="left"/>let mut _7: &amp;[&amp;str];<br align="left"/>let mut _8: &amp;[&amp;str; 1];<br align="left"/>let _9: &amp;[&amp;str; 1];<br align="left"/>let mut _10: &amp;[std::fmt::ArgumentV1];<br align="left"/>let mut _11: &amp;[std::fmt::ArgumentV1; 0];<br align="left"/>let mut _12: &amp;[&amp;str; 1];<br align="left"/>let mut _13: &amp;[std::fmt::ArgumentV1; 0];<br align="left"/>debug t =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug args =&gt; _3;<br align="left"/>debug args =&gt; _6;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1 = const true<br/>_2 = const false<br/>_13 = const main::promoted[1]<br/>_6 = _13<br/>_12 = const main::promoted[0]<br/>_9 = _12<br/>_8 = _9<br/>_7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))<br/>_11 = _6<br/>_10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_5 = Arguments::new_v1(move _7, move _10)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_4 = _print(move _5)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3 -> bb1__0_3 [label="return"];
    bb1__0_3 -> bb2__0_3 [label="return"];
}
